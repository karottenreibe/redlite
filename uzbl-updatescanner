#!/bin/sh
# periodically scans webpages for updates and notifies you
# with a diff when things change. Only one instance running
# at a time (race conditions aside)
# WARNING: do not change the name of the script, or process
# detection will fail!
# invocation: (once per instance!) spawn @scripts_dir/uzbl-updatescanner
# dependencies: diff-html.py, dzen2, wget

config=$XDG_CONFIG_HOME/uzbl/updatescanner-urls
cache=$XDG_CACHE_HOME/uzbl/updatescanner
# pause between scans in seconds
interval=1800

# dzen settings
FONT='-*-courier-medium-r-*-*-12-*-*-*-*-*-*-*'
FG='#FFFFFF'
BG='#303030'

# ensure stuff exists
mkdir -p "$cache"
touch "$config"

# only one instance (race conditions aside ;-)
# cache processes, or grep will mess things up
processes=`ps -e`
instances=`echo "$processes" | grep -c uzbl-updatescan`
if [ "$instances" != "1" ]
then
    echo 'updatescanner: not alone -- going back to sleep'
    exit 0
else
    echo 'updatescanner: alone -- working'
fi

# scanning function
scan() {
    # remove comments
    urls=`grep -v "^#" "$config"`

    IFS='
'
    for params in $urls
    do
        url=`echo $params | awk '{print $1}'`
        file="$cache/`echo "$url" | sed 's/[^a-zA-Z0-9_.-]/_/g'`"

        echo "update-scanner: scanning $params"
        sh -c "wget -q --user-agent=Firefox -O - $params > '$file.new'"
        if [ "$?" != "0" ]
        then
            echo "update-scanner: wget error!"
            continue
        fi

        # don't alert on first time get
        if [ ! -f "$file" ]
        then
            mv "$file.new" "$file"
            continue
        fi

        # otherwise: see if things changed
        if ! diff -q -w "$file" "$file.new" > /dev/null
        then
            # no colons or commas or ... in urls! messes up dzen (stupid syntax)
            # so we cat the code into a tempfile and sh that one
            tmpfile=`mktemp`
            tmphtml=`mktemp`
            dir=`dirname $0`

            # cat commands for diffing into file
            # diff using html-diff.py, then inject the <base> and <style>
            # mark the first diff with an id so we can directy jump there
            cat <<EOS > $tmpfile
$dir/html-diff.py "$file" "$file.new" | sed 's/<head>/\\n<head>\\n/' | sed '/<head>/ a\\
<head><base href="$url"/><style type="text/css"><!--ins {background: #bfb} del{background: #fcc} ins,del {text-decoration: none} --></style>' |
sed '1,/class="diff/s/class="diff/id="first-diff" \\0/' > "$tmphtml"
uzbl-browser "file://$tmphtml#first-diff"
mv "$file.new" "$file"
EOS
            # show dzen2 notification
            (echo "$url updated!") | dzen2 -p -xs 2 -w 500 -y -1 -x -500 -fg $FG -bg $BG -fn "$FONT" -e \
                "onstart=stick;button1=exec:sh $tmpfile && rm $tmpfile && rm $tmphtml,exit;button3=exec:rm $tmpfile,rm $tmphtml,exit"
        fi
    done
}

# scanner loop: 'til death do us part ;-)
while true
do
    scan
    sleep $interval
done

